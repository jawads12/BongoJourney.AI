{"ast":null,"code":"var _jsxFileName = \"D:\\\\BongoJourney.AI\\\\Frontend\\\\src\\\\pages\\\\Signin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Signin.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signin = () => {\n  _s();\n  const navigate = useNavigate();\n  const [phone, setPhone] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n\n  // Function to handle sign-in\n  const onButtonSignInClick = useCallback(async () => {\n    try {\n      const response = await axios.post('http://localhost:3001/login', {\n        phone,\n        password\n      });\n      if (response.data.authenticated) {\n        navigate(\"/dashboard/ashol-dashboard\");\n      } else {\n        alert(\"Wrong password\");\n      }\n    } catch (error) {\n      console.error(\"Error signing in:\", error);\n    }\n  }, [phone, password, navigate]);\n  const onButtonSignIn1Click = useCallback(() => {\n    window.open(\"https://accounts.google.com/ServiceLogin?hl=en-GB\");\n  }, []);\n  useEffect(() => {\n    // Ensure the phone number starts with \"88\" and store it as a string\n    const formattedPhone = phone.startsWith(\"88\") ? phone : `88${phone}`;\n    localStorage.setItem(\"phone\", formattedPhone);\n  }, [phone]);\n  useEffect(() => {\n    // Retrieve the phone number from local storage when the component mounts\n    const storedPhone = localStorage.getItem(\"phone\");\n    if (storedPhone) {\n      setPhone(storedPhone);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Signin, \"fYxBJueOMyDZTxckn7k2Tv2iY/g=\", false, function () {\n  return [useNavigate];\n});\n_c = Signin;\nexport default Signin;\nvar _c;\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","Signin","_s","navigate","phone","setPhone","password","setPassword","showPassword","setShowPassword","rememberMe","setRememberMe","onButtonSignInClick","response","post","data","authenticated","alert","error","console","onButtonSignIn1Click","window","open","formattedPhone","startsWith","localStorage","setItem","storedPhone","getItem","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/BongoJourney.AI/Frontend/src/pages/Signin.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Signin.css\";\nimport axios from 'axios';\n\nconst Signin = () => {\n  const navigate = useNavigate();\n  const [phone, setPhone] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n\n  // Function to handle sign-in\n  const onButtonSignInClick = useCallback(async () => {\n    try {\n      const response = await axios.post('http://localhost:3001/login', {\n        phone,\n        password\n      });\n\n      if (response.data.authenticated) {\n        navigate(\"/dashboard/ashol-dashboard\");\n      } else {\n        alert(\"Wrong password\");\n      }\n    } catch (error) {\n      console.error(\"Error signing in:\", error);\n    }\n  }, [phone, password, navigate]);\n\n  const onButtonSignIn1Click = useCallback(() => {\n    window.open(\"https://accounts.google.com/ServiceLogin?hl=en-GB\");\n  }, []);\n\n  useEffect(() => {\n    // Ensure the phone number starts with \"88\" and store it as a string\n    const formattedPhone = phone.startsWith(\"88\") ? phone : `88${phone}`;\n    localStorage.setItem(\"phone\", formattedPhone);\n  }, [phone]);\n\n  useEffect(() => {\n    // Retrieve the phone number from local storage when the component mounts\n    const storedPhone = localStorage.getItem(\"phone\");\n    if (storedPhone) {\n      setPhone(storedPhone);\n    }\n  }, []);\n\n  return (\n    <div className=\"signin\">\n      {/* ... rest of your JSX code ... */}\n    </div>\n  );\n};\n\nexport default Signin;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAC/D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,cAAc;AACrB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAMkB,mBAAmB,GAAGjB,WAAW,CAAC,YAAY;IAClD,IAAI;MACF,MAAMkB,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,6BAA6B,EAAE;QAC/DV,KAAK;QACLE;MACF,CAAC,CAAC;MAEF,IAAIO,QAAQ,CAACE,IAAI,CAACC,aAAa,EAAE;QAC/Bb,QAAQ,CAAC,4BAA4B,CAAC;MACxC,CAAC,MAAM;QACLc,KAAK,CAAC,gBAAgB,CAAC;MACzB;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C;EACF,CAAC,EAAE,CAACd,KAAK,EAAEE,QAAQ,EAAEH,QAAQ,CAAC,CAAC;EAE/B,MAAMiB,oBAAoB,GAAGzB,WAAW,CAAC,MAAM;IAC7C0B,MAAM,CAACC,IAAI,CAAC,mDAAmD,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EAEN1B,SAAS,CAAC,MAAM;IACd;IACA,MAAM2B,cAAc,GAAGnB,KAAK,CAACoB,UAAU,CAAC,IAAI,CAAC,GAAGpB,KAAK,GAAI,KAAIA,KAAM,EAAC;IACpEqB,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,cAAc,CAAC;EAC/C,CAAC,EAAE,CAACnB,KAAK,CAAC,CAAC;EAEXR,SAAS,CAAC,MAAM;IACd;IACA,MAAM+B,WAAW,GAAGF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;IACjD,IAAID,WAAW,EAAE;MACftB,QAAQ,CAACsB,WAAW,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE3B,OAAA;IAAK6B,SAAS,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAElB,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAhDID,MAAM;EAAA,QACOJ,WAAW;AAAA;AAAAqC,EAAA,GADxBjC,MAAM;AAkDZ,eAAeA,MAAM;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}