{"ast":null,"code":"var _jsxFileName = \"D:\\\\BongoJourney.AI\\\\Frontend\\\\src\\\\components\\\\BuildPlanMyself.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport loadGoogleMapsScript from '../pages/googleMaps';\nimport './BuildPlanMyself.css';\nimport DayCard from './DayCard'; // Import the DayCard component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildPlanMyself = () => {\n  _s();\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [placesTextFrom, setPlacesTextFrom] = useState('');\n  const [placesTextTo, setPlacesTextTo] = useState('');\n  const [date, setDate] = useState('');\n  const [numberOfDays, setNumberOfDays] = useState('');\n  const [travelingWith, setTravelingWith] = useState('couple'); // Default value\n  const [selectedDay, setSelectedDay] = useState(1);\n  const [placeToAdd, setPlaceToAdd] = useState('');\n  const [nodes, setNodes] = useState([]); // State to keep track of nodes\n\n  const autocompleteInputFromRef = useRef(null);\n  const autocompleteInputToRef = useRef(null);\n  const autocompleteInputAddPlaceRef = useRef(null);\n  useEffect(() => {\n    if (startDate && endDate) {\n      const start = new Date(startDate);\n      const end = new Date(endDate);\n      const diffTime = Math.abs(end - start);\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n      setNumberOfDays(diffDays);\n    }\n  }, [startDate, endDate]);\n  const handlePlaceToAddChange = event => {\n    setPlaceToAdd(event.target.value);\n  };\n  const handlePlacesTextChangeFrom = event => {\n    setPlacesTextFrom(event.target.value);\n  };\n  const handlePlacesTextChangeTo = event => {\n    setPlacesTextTo(event.target.value);\n  };\n  const handleDateChange = event => {\n    setDate(event.target.value);\n  };\n  const handleNumberOfDaysChange = event => {\n    console.log(+event.target.value);\n    setNumberOfDays(+event.target.value);\n  };\n  const handleTravelingWithChange = event => {\n    setTravelingWith(event.target.value);\n  };\n  const handleAddPlaceNode = e => {\n    e.preventDefault();\n    if (e.target.value.trim() !== '') {\n      setNodes(prevNodes => [...prevNodes, {\n        name: e.target.value.trim()\n      }]);\n      setPlaceToAdd('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"build-plan-myself\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upper-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"from\",\n        type: \"text\",\n        placeholder: \"From\",\n        value: placesTextFrom,\n        onChange: handlePlacesTextChangeFrom,\n        ref: autocompleteInputFromRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"date\",\n        type: \"date\",\n        value: date,\n        onChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"with\",\n        children: \"with\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"family\",\n        value: travelingWith,\n        onChange: handleTravelingWithChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"couple\",\n          children: \"Couple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"family\",\n          children: \"Family\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"friend\",\n          children: \"Friend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"solo\",\n          children: \"Solo trip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"number-of-days\",\n        type: \"number\",\n        placeholder: \"Number of Days\",\n        value: numberOfDays,\n        onChange: handleNumberOfDaysChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"to\",\n        type: \"text\",\n        placeholder: \"To\",\n        value: placesTextTo,\n        onChange: handlePlacesTextChangeTo,\n        ref: autocompleteInputToRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), Array.from({\n      length: numberOfDays\n    }, (_, i) => /*#__PURE__*/_jsxDEV(DayCard, {\n      day: i + 1,\n      nodes: nodes,\n      onAddPlaceNode: handleAddPlaceNode\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildPlanMyself, \"O5qjRS8bw1TfYOjlONxC0qvsTqQ=\");\n_c = BuildPlanMyself;\nexport default BuildPlanMyself;\nvar _c;\n$RefreshReg$(_c, \"BuildPlanMyself\");","map":{"version":3,"names":["React","useState","useRef","useEffect","loadGoogleMapsScript","DayCard","jsxDEV","_jsxDEV","BuildPlanMyself","_s","startDate","setStartDate","endDate","setEndDate","placesTextFrom","setPlacesTextFrom","placesTextTo","setPlacesTextTo","date","setDate","numberOfDays","setNumberOfDays","travelingWith","setTravelingWith","selectedDay","setSelectedDay","placeToAdd","setPlaceToAdd","nodes","setNodes","autocompleteInputFromRef","autocompleteInputToRef","autocompleteInputAddPlaceRef","start","Date","end","diffTime","Math","abs","diffDays","ceil","handlePlaceToAddChange","event","target","value","handlePlacesTextChangeFrom","handlePlacesTextChangeTo","handleDateChange","handleNumberOfDaysChange","console","log","handleTravelingWithChange","handleAddPlaceNode","e","preventDefault","trim","prevNodes","name","className","children","type","placeholder","onChange","ref","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","_","i","day","onAddPlaceNode","_c","$RefreshReg$"],"sources":["D:/BongoJourney.AI/Frontend/src/components/BuildPlanMyself.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport loadGoogleMapsScript from '../pages/googleMaps';\r\n\r\nimport './BuildPlanMyself.css';\r\nimport DayCard from './DayCard'; // Import the DayCard component\r\n\r\n\r\nconst BuildPlanMyself = () => {\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [placesTextFrom, setPlacesTextFrom] = useState('');\r\n  const [placesTextTo, setPlacesTextTo] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [numberOfDays, setNumberOfDays] = useState('');\r\n  const [travelingWith, setTravelingWith] = useState('couple'); // Default value\r\n  const [selectedDay, setSelectedDay] = useState(1);\r\n  const [placeToAdd, setPlaceToAdd] = useState('');\r\n  const [nodes, setNodes] = useState([]); // State to keep track of nodes\r\n\r\n\r\n  const autocompleteInputFromRef = useRef(null);\r\n  const autocompleteInputToRef = useRef(null);\r\n  const autocompleteInputAddPlaceRef = useRef(null);\r\n\r\n\r\n  useEffect(() => {\r\n    if (startDate && endDate) {\r\n      const start = new Date(startDate);\r\n      const end = new Date(endDate);\r\n      const diffTime = Math.abs(end - start);\r\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n      setNumberOfDays(diffDays);\r\n    }\r\n  }, [startDate, endDate]);\r\n   \r\n\r\n  \r\n\r\n\r\n  const handlePlaceToAddChange = (event) => {\r\n    setPlaceToAdd(event.target.value);\r\n  };\r\n  \r\n  const handlePlacesTextChangeFrom = (event) => {\r\n    setPlacesTextFrom(event.target.value);\r\n  };\r\n\r\n  const handlePlacesTextChangeTo = (event) => {\r\n    setPlacesTextTo(event.target.value);\r\n  };\r\n\r\n  const handleDateChange = (event) => {\r\n    setDate(event.target.value);\r\n  };\r\n\r\n  const handleNumberOfDaysChange = (event) => {\r\n    console.log(+event.target.value)\r\n    setNumberOfDays(+event.target.value);\r\n  };\r\n\r\n  const handleTravelingWithChange = (event) => {\r\n    setTravelingWith(event.target.value);\r\n  };\r\n  const handleAddPlaceNode = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.value.trim() !== '') {\r\n      setNodes(prevNodes => [\r\n        ...prevNodes,\r\n        { name: e.target.value.trim() }\r\n      ]);\r\n      setPlaceToAdd('');\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"build-plan-myself\">\r\n      <div className=\"upper-div\">\r\n        <input\r\n          className=\"from\"\r\n          type=\"text\"\r\n          placeholder=\"From\"\r\n          value={placesTextFrom}\r\n          onChange={handlePlacesTextChangeFrom}\r\n          ref={autocompleteInputFromRef}\r\n        />\r\n        <input\r\n          className=\"date\"\r\n          type=\"date\"\r\n          value={date}\r\n          onChange={handleDateChange}\r\n        />\r\n        <div className=\"with\">with</div>\r\n        <select\r\n          className=\"family\"\r\n          value={travelingWith}\r\n          onChange={handleTravelingWithChange}\r\n        >\r\n          <option value=\"couple\">Couple</option>\r\n          <option value=\"family\">Family</option>\r\n          <option value=\"friend\">Friend</option>\r\n          <option value=\"solo\">Solo trip</option>\r\n        </select>\r\n        <input\r\n          className=\"number-of-days\"\r\n          type=\"number\"\r\n          placeholder=\"Number of Days\"\r\n          value={numberOfDays}\r\n          onChange={handleNumberOfDaysChange}\r\n        />\r\n        <input\r\n          className=\"to\"\r\n          type=\"text\"\r\n          placeholder=\"To\"\r\n          value={placesTextTo}\r\n          onChange={handlePlacesTextChangeTo}\r\n          ref={autocompleteInputToRef}\r\n        />\r\n      </div>\r\n      \r\n      {\r\n         Array.from({ length: numberOfDays }, (_, i) => (\r\n          <DayCard \r\n            key={i} \r\n            day={i + 1} \r\n            nodes={nodes} \r\n            onAddPlaceNode={handleAddPlaceNode}\r\n          />\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildPlanMyself;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}