{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\OneDrive\\\\Desktop\\\\Projects\\\\Full Stack CRUD Operation\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport List from './components/List';\nimport axios from 'axios';\nimport { baseURL } from './utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [tasks, setTask] = useState([]);\n  const [updateUI, setUpdateUI] = useState(false);\n  useEffect(() => {\n    axios.get(`${baseURL}/get`) ///receiving data\n    .then(res => {\n      console.log(res.data);\n      setTask(res.data); ///saving data\n    });\n  }, []);\n  const addTask = () => {\n    axios.post(`${baseURL}/save`, {\n      task: input\n    }).then(res => {\n      console.log(res.data);\n      setInput(\"\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    align: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Project for learning CRUD Operations \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputholder\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      type: \"none\",\n      children: tasks.map(task => {\n        /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eK21ZJuHE6M7NkaWehkkr7CdGBk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","List","axios","baseURL","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","input","setInput","tasks","setTask","updateUI","setUpdateUI","get","then","res","console","log","data","addTask","post","task","align","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/Asus/OneDrive/Desktop/Projects/Full Stack CRUD Operation/frontend/src/App.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\nimport List from './components/List'; \nimport axios from 'axios';\nimport { baseURL } from './utils/constants';\n\nconst App = () => {\n  const [input,setInput] = useState(\"\");\n  const [tasks,setTask] = useState([]);\n  const [updateUI,setUpdateUI] = useState(false);\n\n  useEffect(() => {\n    axios.get(`${baseURL}/get`)   ///receiving data\n      .then((res)=>{\n        console.log(res.data);\n        setTask(res.data);         ///saving data\n      })\n  } ,[]);\n\n  const addTask = () => {\n    axios.post(`${baseURL}/save`,{task: input})\n    .then((res)=>{\n      console.log(res.data);\n      setInput(\"\");\n    });\n  };\n  return (\n    <main align=\"center\">\n        <h1 className='title'>Project for learning CRUD Operations </h1>\n        <div className='inputholder'>\n          <input type=\"text\" value={input} onChange={(e) => setInput(e.target.value)} /> \n          <button type='submit' onClick={addTask}>Add Task</button>\n        </div> \n        <ul type='none'> \n          {\n              tasks.map((task)=>{\n                <></>\n              })\n          }\n        </ul>\n    </main>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACjD,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACa,KAAK,EAACC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,QAAQ,EAACC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACdE,KAAK,CAACc,GAAG,CAAE,GAAEb,OAAQ,MAAK,CAAC,CAAG;IAAA,CAC3Bc,IAAI,CAAEC,GAAG,IAAG;MACXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;MACrBR,OAAO,CAACK,GAAG,CAACG,IAAI,CAAC,CAAC,CAAS;IAC7B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpBpB,KAAK,CAACqB,IAAI,CAAE,GAAEpB,OAAQ,OAAM,EAAC;MAACqB,IAAI,EAAEd;IAAK,CAAC,CAAC,CAC1CO,IAAI,CAAEC,GAAG,IAAG;MACXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;MACrBV,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC;EACJ,CAAC;EACD,oBACEN,OAAA;IAAMoB,KAAK,EAAC,QAAQ;IAAAC,QAAA,gBAChBrB,OAAA;MAAIsB,SAAS,EAAC,OAAO;MAAAD,QAAA,EAAC;IAAqC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChE1B,OAAA;MAAKsB,SAAS,EAAC,aAAa;MAAAD,QAAA,gBAC1BrB,OAAA;QAAO2B,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEvB,KAAM;QAACwB,QAAQ,EAAGC,CAAC,IAAKxB,QAAQ,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9E1B,OAAA;QAAQ2B,IAAI,EAAC,QAAQ;QAACK,OAAO,EAAEf,OAAQ;QAAAI,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,eACN1B,OAAA;MAAI2B,IAAI,EAAC,MAAM;MAAAN,QAAA,EAETd,KAAK,CAAC0B,GAAG,CAAEd,IAAI,IAAG;QAChB,aAAAnB,OAAA,CAAAE,SAAA,mBAAI,CAAC;MACP,CAAC;IAAC;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEX,CAAC;AAAAtB,EAAA,CApCKD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAsCT,eAAeA,GAAG;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}