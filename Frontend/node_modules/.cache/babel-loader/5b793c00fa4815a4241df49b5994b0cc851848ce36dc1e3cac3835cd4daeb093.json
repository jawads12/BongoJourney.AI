{"ast":null,"code":"var _jsxFileName = \"D:\\\\BongoJourney.AI\\\\Frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef, useEffect } from \"react\";\nimport loadGoogleMapsScript from \"./googleMaps\";\nimport Frame from \"./user_profile.js\";\nimport PortalPopup from \"../components/PortalPopup.js\";\nimport Mytrip from \"../components/Mytrip.js\";\nimport StartPopup from \"../components/StartPopup.js\"; // Import the StartPopup component\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [isFrameOpen, setFrameOpen] = useState(false);\n  const [isMytripOpen, setMytripOpen] = useState(false);\n  const [isStartPopupOpen, setStartPopupOpen] = useState(false); // State for StartPopup\n  const [placesText, setPlacesText] = useState(\"\");\n  const autocompleteInputRef = useRef(null);\n  const openFrame = useCallback(() => {\n    setFrameOpen(true);\n  }, []);\n  const closeFrame = useCallback(() => {\n    setFrameOpen(false);\n  }, []);\n  const openMytrip = useCallback(() => {\n    setMytripOpen(true);\n  }, []);\n  const closeMytrip = useCallback(() => {\n    setMytripOpen(false);\n  }, []);\n  const openStartPopup = useCallback(() => {\n    setStartPopupOpen(true);\n  }, []);\n  const closeStartPopup = useCallback(() => {\n    setStartPopupOpen(false);\n  }, []);\n  const onDashStartATripClick = useCallback(() => {\n    openStartPopup(); // Open the StartPopup when \"Start a Trip\" is clicked\n  }, []);\n  useEffect(() => {\n    loadGoogleMapsScript(() => {\n      if (window.google) {\n        // Initialize the Places Autocomplete service with componentRestrictions\n        const autocomplete = new window.google.maps.places.Autocomplete(autocompleteInputRef.current, {\n          componentRestrictions: {\n            country: \"BD\"\n          } // \"BD\" represents Bangladesh\n        });\n\n        autocomplete.addListener(\"place_changed\", function () {\n          const place = autocomplete.getPlace();\n          console.log(place); // You can handle the selected place as needed\n        });\n      }\n    });\n  }, []);\n  const handlePlacesTextChange = event => {\n    setPlacesText(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dash-start-a-trip\",\n        onClick: onDashStartATripClick,\n        children: \"Start a trip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), isFrameOpen && /*#__PURE__*/_jsxDEV(PortalPopup, {\n      overlayColor: \"rgba(113, 113, 113, 0.3)\",\n      placement: \"Centered\",\n      onOutsideClick: closeFrame,\n      children: /*#__PURE__*/_jsxDEV(Frame, {\n        onClose: closeFrame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), isMytripOpen && /*#__PURE__*/_jsxDEV(PortalPopup, {\n      overlayColor: \"rgba(113, 113, 113, 0.3)\",\n      placement: \"Centered\",\n      onOutsideClick: closeMytrip,\n      children: /*#__PURE__*/_jsxDEV(Mytrip, {\n        onClose: closeMytrip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), isStartPopupOpen && /*#__PURE__*/_jsxDEV(PortalPopup, {\n      overlayColor: \"rgba(113, 113, 113, 0.3)\",\n      placement: \"Centered\",\n      onOutsideClick: closeStartPopup,\n      children: /*#__PURE__*/_jsxDEV(StartPopup, {\n        onClose: closeStartPopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Dashboard, \"WmV+wKjSsip3Y3E90TIOeovncOE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useCallback","useRef","useEffect","loadGoogleMapsScript","Frame","PortalPopup","Mytrip","StartPopup","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","isFrameOpen","setFrameOpen","isMytripOpen","setMytripOpen","isStartPopupOpen","setStartPopupOpen","placesText","setPlacesText","autocompleteInputRef","openFrame","closeFrame","openMytrip","closeMytrip","openStartPopup","closeStartPopup","onDashStartATripClick","window","google","autocomplete","maps","places","Autocomplete","current","componentRestrictions","country","addListener","place","getPlace","console","log","handlePlacesTextChange","event","target","value","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","overlayColor","placement","onOutsideClick","onClose","_c","$RefreshReg$"],"sources":["D:/BongoJourney.AI/Frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useCallback, useRef, useEffect } from \"react\";\r\nimport loadGoogleMapsScript from \"./googleMaps\";\r\nimport Frame from \"./user_profile.js\";\r\nimport PortalPopup from \"../components/PortalPopup.js\";\r\nimport Mytrip from \"../components/Mytrip.js\";\r\nimport StartPopup from \"../components/StartPopup.js\"; // Import the StartPopup component\r\nimport \"./Dashboard.css\";\r\n\r\nconst Dashboard = () => {\r\n  const [isFrameOpen, setFrameOpen] = useState(false);\r\n  const [isMytripOpen, setMytripOpen] = useState(false);\r\n  const [isStartPopupOpen, setStartPopupOpen] = useState(false); // State for StartPopup\r\n  const [placesText, setPlacesText] = useState(\"\");\r\n  const autocompleteInputRef = useRef(null);\r\n\r\n  const openFrame = useCallback(() => {\r\n    setFrameOpen(true);\r\n  }, []);\r\n\r\n  const closeFrame = useCallback(() => {\r\n    setFrameOpen(false);\r\n  }, []);\r\n\r\n  const openMytrip = useCallback(() => {\r\n    setMytripOpen(true);\r\n  }, []);\r\n\r\n  const closeMytrip = useCallback(() => {\r\n    setMytripOpen(false);\r\n  }, []);\r\n\r\n  const openStartPopup = useCallback(() => {\r\n    setStartPopupOpen(true);\r\n  }, []);\r\n\r\n  const closeStartPopup = useCallback(() => {\r\n    setStartPopupOpen(false);\r\n  }, []);\r\n\r\n  const onDashStartATripClick = useCallback(() => {\r\n    openStartPopup(); // Open the StartPopup when \"Start a Trip\" is clicked\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadGoogleMapsScript(() => {\r\n      if (window.google) {\r\n        // Initialize the Places Autocomplete service with componentRestrictions\r\n        const autocomplete = new window.google.maps.places.Autocomplete(autocompleteInputRef.current, {\r\n          componentRestrictions: { country: \"BD\" }, // \"BD\" represents Bangladesh\r\n        });\r\n\r\n        autocomplete.addListener(\"place_changed\", function () {\r\n          const place = autocomplete.getPlace();\r\n          console.log(place); // You can handle the selected place as needed\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handlePlacesTextChange = (event) => {\r\n    setPlacesText(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"dashboard\">\r\n        {/* ... (Your existing code) ... */}\r\n        <div className=\"dash-start-a-trip\" onClick={onDashStartATripClick}>\r\n          Start a trip\r\n        </div>\r\n      </div>\r\n      {isFrameOpen && (\r\n        <PortalPopup\r\n          overlayColor=\"rgba(113, 113, 113, 0.3)\"\r\n          placement=\"Centered\"\r\n          onOutsideClick={closeFrame}\r\n        >\r\n          <Frame onClose={closeFrame} />\r\n        </PortalPopup>\r\n      )}\r\n      {isMytripOpen && (\r\n        <PortalPopup\r\n          overlayColor=\"rgba(113, 113, 113, 0.3)\"\r\n          placement=\"Centered\"\r\n          onOutsideClick={closeMytrip}\r\n        >\r\n          <Mytrip onClose={closeMytrip} />\r\n        </PortalPopup>\r\n      )}\r\n      {isStartPopupOpen && (\r\n        <PortalPopup\r\n          overlayColor=\"rgba(113, 113, 113, 0.3)\"\r\n          placement=\"Centered\"\r\n          onOutsideClick={closeStartPopup}\r\n        >\r\n          <StartPopup onClose={closeStartPopup} />\r\n        </PortalPopup>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}