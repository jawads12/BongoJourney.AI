{"ast":null,"code":"var _jsxFileName = \"D:\\\\BongoJourney.AI\\\\Frontend\\\\src\\\\components\\\\BuildPlanMyself.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport loadGoogleMapsScript from '../pages/googleMaps';\nimport './BuildPlanMyself.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildPlanMyself = () => {\n  _s();\n  // Existing states\n  const [placesTextFrom, setPlacesTextFrom] = useState('');\n  const [placesTextTo, setPlacesTextTo] = useState('');\n  const [date, setDate] = useState('');\n  const [numberOfDays, setNumberOfDays] = useState('');\n  const [travelingWith, setTravelingWith] = useState('couple');\n  const [selectedDay, setSelectedDay] = useState(1);\n  const [placeToAdd, setPlaceToAdd] = useState(''); // State for the new input field\n\n  // Existing refs\n  const autocompleteInputFromRef = useRef(null);\n  const autocompleteInputToRef = useRef(null);\n\n  // New ref for the 'add-place' input\n  const autocompleteInputAddPlaceRef = useRef(null);\n  useEffect(() => {\n    loadGoogleMapsScript(() => {\n      if (window.google) {\n        // Initialize existing autocompletes...\n        // Your existing code for 'from' and 'to' inputs\n\n        // Initialize the new Autocomplete for 'add-place' input\n        const autocompleteAddPlace = new window.google.maps.places.Autocomplete(autocompleteInputAddPlaceRef.current, {\n          types: ['(regions)'],\n          componentRestrictions: {\n            country: 'BD'\n          }\n        });\n        autocompleteAddPlace.addListener('place_changed', () => {\n          const place = autocompleteAddPlace.getPlace();\n          if (place.address_components) {\n            const districtComponent = place.address_components.find(component => component.types.includes('administrative_area_level_2'));\n            if (districtComponent) {\n              setPlaceToAdd(districtComponent.long_name);\n            } else {\n              setPlaceToAdd('');\n            }\n          }\n        });\n      }\n    });\n  }, []);\n\n  // Existing handlers remain the same...\n\n  // Handler for the 'add-place' input change\n  const handlePlaceToAddChange = event => {\n    setPlaceToAdd(event.target.value);\n  };\n\n  // Render method remains mostly the same, update to include the new input field\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"build-plan-myself\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upper-div\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lower-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"node\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"node-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"add-place\",\n          type: \"text\",\n          placeholder: \"Type here to add place\",\n          value: placeToAdd,\n          onChange: handlePlaceToAddChange,\n          ref: autocompleteInputAddPlaceRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-node\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildPlanMyself, \"WUL8Ng9YvHhSg53WBooHoJ4D7uA=\");\n_c = BuildPlanMyself;\nexport default BuildPlanMyself;\nvar _c;\n$RefreshReg$(_c, \"BuildPlanMyself\");","map":{"version":3,"names":["React","useState","useRef","useEffect","loadGoogleMapsScript","jsxDEV","_jsxDEV","BuildPlanMyself","_s","placesTextFrom","setPlacesTextFrom","placesTextTo","setPlacesTextTo","date","setDate","numberOfDays","setNumberOfDays","travelingWith","setTravelingWith","selectedDay","setSelectedDay","placeToAdd","setPlaceToAdd","autocompleteInputFromRef","autocompleteInputToRef","autocompleteInputAddPlaceRef","window","google","autocompleteAddPlace","maps","places","Autocomplete","current","types","componentRestrictions","country","addListener","place","getPlace","address_components","districtComponent","find","component","includes","long_name","handlePlaceToAddChange","event","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","ref","_c","$RefreshReg$"],"sources":["D:/BongoJourney.AI/Frontend/src/components/BuildPlanMyself.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport loadGoogleMapsScript from '../pages/googleMaps';\r\n\r\nimport './BuildPlanMyself.css';\r\n\r\nconst BuildPlanMyself = () => {\r\n  // Existing states\r\n  const [placesTextFrom, setPlacesTextFrom] = useState('');\r\n  const [placesTextTo, setPlacesTextTo] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [numberOfDays, setNumberOfDays] = useState('');\r\n  const [travelingWith, setTravelingWith] = useState('couple');\r\n  const [selectedDay, setSelectedDay] = useState(1);\r\n  const [placeToAdd, setPlaceToAdd] = useState(''); // State for the new input field\r\n\r\n  // Existing refs\r\n  const autocompleteInputFromRef = useRef(null);\r\n  const autocompleteInputToRef = useRef(null);\r\n\r\n  // New ref for the 'add-place' input\r\n  const autocompleteInputAddPlaceRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    loadGoogleMapsScript(() => {\r\n      if (window.google) {\r\n        // Initialize existing autocompletes...\r\n        // Your existing code for 'from' and 'to' inputs\r\n\r\n        // Initialize the new Autocomplete for 'add-place' input\r\n        const autocompleteAddPlace = new window.google.maps.places.Autocomplete(\r\n          autocompleteInputAddPlaceRef.current,\r\n          {\r\n            types: ['(regions)'],\r\n            componentRestrictions: { country: 'BD' },\r\n          }\r\n        );\r\n\r\n        autocompleteAddPlace.addListener('place_changed', () => {\r\n          const place = autocompleteAddPlace.getPlace();\r\n          if (place.address_components) {\r\n            const districtComponent = place.address_components.find(\r\n              component => component.types.includes('administrative_area_level_2')\r\n            );\r\n\r\n            if (districtComponent) {\r\n              setPlaceToAdd(districtComponent.long_name);\r\n            } else {\r\n              setPlaceToAdd('');\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // Existing handlers remain the same...\r\n\r\n  // Handler for the 'add-place' input change\r\n  const handlePlaceToAddChange = (event) => {\r\n    setPlaceToAdd(event.target.value);\r\n  };\r\n\r\n  // Render method remains mostly the same, update to include the new input field\r\n  return (\r\n    <div className=\"build-plan-myself\">\r\n      <div className=\"upper-div\">\r\n        {/* Existing inputs and other elements... */}\r\n      </div>\r\n      <div className=\"lower-div\">\r\n        <div className=\"upore\">\r\n          {/* Existing elements... */}\r\n        </div>\r\n        \r\n        <div className=\"node\">\r\n          <div className=\"node-circle\"></div>\r\n          \r\n          <input\r\n            className=\"add-place\"\r\n            type=\"text\"\r\n            placeholder=\"Type here to add place\"\r\n            value={placeToAdd}\r\n            onChange={handlePlaceToAddChange}\r\n            ref={autocompleteInputAddPlaceRef}\r\n          />\r\n          <button className=\"button-node\">Add</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildPlanMyself;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}