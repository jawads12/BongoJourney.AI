{"ast":null,"code":"var _jsxFileName = \"D:\\\\BongoJourney.AI\\\\Frontend\\\\src\\\\components\\\\DayCard.js\",\n  _s = $RefreshSig$();\n// // DayCard.js\n// import React from \"react\";\n// import \"./DayCard.css\"; // Assuming you have a separate CSS file for styles\n\n// const DayCard = ({ day, nodes, onAddPlaceNode }) => {\n//   return (\n//     <form onSubmit={onAddPlaceNode} className=\"day-card\">\n//       <div className=\"full\">\n//         <div className=\"left\">\n//           <div className=\"\">Day {day}</div>\n//           <div>+</div>\n//         </div>\n//         <div className=\"right\">\n//           <div>Node 1</div>\n//           <div>Node 1</div>\n//           <div>Node 1</div>\n//           <div>Node 1</div>\n//           <div>Node 1</div>\n//         </div>\n//       </div>\n//       {/* <div className=\"container\">\n//         <div className=\"\">Day {day}</div>\n//         <div className=\"plus-button\">+</div>\n//       </div> */}\n\n//       {/* <div className=\"node-container\">\n//         {nodes\n//             .filter((node) => node.day === day - 1)\n//             .map((node, index) => (\n//               <div key={index} className=\"node\">\n//                 <div className=\"node-circle\"></div>\n//                 <div className=\"node-name\">{node.name}</div>\n//               </div>\n//             ))}\n//       </div> */}\n//     </form>\n//   );\n// };\n\n// export default DayCard;\n\nimport React, { useState } from \"react\";\nimport \"./DayCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DayCard = ({\n  day,\n  nodes,\n  onAddPlaceNode\n}) => {\n  _s();\n  // State to manage the nodes array\n  const [localNodes, setLocalNodes] = useState(nodes);\n\n  // Function to handle the click on the plus button\n  const handleAddNode = e => {\n    // e.preventDefault();\n    // Create a new node with a unique identifier (you can use a library like uuid for this)\n    const newNode = {\n      id: Date.now(),\n      name: `Node ${localNodes.length + 1}`,\n      day: day - 1\n    };\n\n    // Update the localNodes state with the new node\n    setLocalNodes([...localNodes, newNode]);\n\n    // Call the parent component's onAddPlaceNode function if provided\n    if (onAddPlaceNode) {\n      onAddPlaceNode(newNode);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onAddPlaceNode,\n    className: \"day-card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [\"Day \", day]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plus-button\",\n          onClick: handleAddNode,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"node-container\",\n          children: localNodes.filter(node => node.day === day - 1).map((node, index, array) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"node\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"node-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"node-name\",\n                children: node.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this), index < array.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 48\n            }, this)]\n          }, node.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(DayCard, \"fz9t89A4CiCoBwraGqgVMjRhE0Q=\");\n_c = DayCard;\nexport default DayCard;\nvar _c;\n$RefreshReg$(_c, \"DayCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DayCard","day","nodes","onAddPlaceNode","_s","localNodes","setLocalNodes","handleAddNode","e","newNode","id","Date","now","name","length","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","filter","node","map","index","array","Fragment","_c","$RefreshReg$"],"sources":["D:/BongoJourney.AI/Frontend/src/components/DayCard.js"],"sourcesContent":["// // DayCard.js\r\n// import React from \"react\";\r\n// import \"./DayCard.css\"; // Assuming you have a separate CSS file for styles\r\n\r\n// const DayCard = ({ day, nodes, onAddPlaceNode }) => {\r\n//   return (\r\n//     <form onSubmit={onAddPlaceNode} className=\"day-card\">\r\n//       <div className=\"full\">\r\n//         <div className=\"left\">\r\n//           <div className=\"\">Day {day}</div>\r\n//           <div>+</div>\r\n//         </div>\r\n//         <div className=\"right\">\r\n//           <div>Node 1</div>\r\n//           <div>Node 1</div>\r\n//           <div>Node 1</div>\r\n//           <div>Node 1</div>\r\n//           <div>Node 1</div>\r\n//         </div>\r\n//       </div>\r\n//       {/* <div className=\"container\">\r\n//         <div className=\"\">Day {day}</div>\r\n//         <div className=\"plus-button\">+</div>\r\n//       </div> */}\r\n\r\n//       {/* <div className=\"node-container\">\r\n//         {nodes\r\n//             .filter((node) => node.day === day - 1)\r\n//             .map((node, index) => (\r\n//               <div key={index} className=\"node\">\r\n//                 <div className=\"node-circle\"></div>\r\n//                 <div className=\"node-name\">{node.name}</div>\r\n//               </div>\r\n//             ))}\r\n//       </div> */}\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default DayCard;\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"./DayCard.css\";\r\n\r\nconst DayCard = ({ day, nodes, onAddPlaceNode }) => {\r\n  // State to manage the nodes array\r\n  const [localNodes, setLocalNodes] = useState(nodes);\r\n\r\n  // Function to handle the click on the plus button\r\n  const handleAddNode = (e) => {\r\n    // e.preventDefault();\r\n    // Create a new node with a unique identifier (you can use a library like uuid for this)\r\n    const newNode = {\r\n      id: Date.now(),\r\n      name: `Node ${localNodes.length + 1}`,\r\n      day: day - 1,\r\n    };\r\n\r\n    // Update the localNodes state with the new node\r\n    setLocalNodes([...localNodes, newNode]);\r\n\r\n    // Call the parent component's onAddPlaceNode function if provided\r\n    if (onAddPlaceNode) {\r\n      onAddPlaceNode(newNode);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onAddPlaceNode} className=\"day-card\">\r\n      <div className=\"full\">\r\n        <div className=\"left\">\r\n          <div className=\"\">Day {day}</div>\r\n          <div className=\"plus-button\" onClick={handleAddNode}>\r\n            +\r\n          </div>\r\n        </div>\r\n        <div className=\"right\">\r\n          <div className=\"node-container\">\r\n            {localNodes\r\n              .filter((node) => node.day === day - 1)\r\n              .map((node, index, array) => (\r\n                <React.Fragment key={node.id}>\r\n                  <div className=\"node\">\r\n                    <div className=\"node-circle\"></div>\r\n                    <div className=\"node-name\">{node.name}</div>\r\n                  </div>\r\n                  {index < array.length - 1 && <div className=\"line\"></div>}\r\n                </React.Fragment>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default DayCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}