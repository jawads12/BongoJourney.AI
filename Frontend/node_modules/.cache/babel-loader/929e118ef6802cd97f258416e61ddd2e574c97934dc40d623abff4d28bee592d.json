{"ast":null,"code":"var _jsxFileName = \"D:\\\\BongoJourney.AI\\\\Frontend\\\\src\\\\components\\\\DayCard.js\",\n  _s = $RefreshSig$();\n// DayCard.js\nimport React, { useState } from \"react\";\nimport \"./DayCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DayCard = ({\n  day,\n  nodes,\n  onAddPlaceNode\n}) => {\n  _s();\n  const [localNodes, setLocalNodes] = useState(nodes);\n  const [isLoading, setIsLoading] = useState(false); // Loading state\n\n  const handleAddNode = async e => {\n    setIsLoading(true); // Start loading animation\n\n    // Simulate an API call or any asynchronous operation\n    setTimeout(async () => {\n      // Create a new node with a unique identifier\n      const newNode = {\n        id: Date.now(),\n        name: `Node ${localNodes.length + 1}`,\n        day: day - 1\n      };\n\n      // Update the localNodes state with the new node\n      setLocalNodes([...localNodes, newNode]);\n\n      // Call the parent component's onAddPlaceNode function if provided\n      if (onAddPlaceNode) {\n        await onAddPlaceNode(newNode);\n      }\n      setIsLoading(false); // Stop loading animation\n    }, 1000); // Simulated delay for demonstration (replace with actual API call)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onAddPlaceNode,\n    className: \"day-card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [\"Day \", day]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plus-button\",\n          onClick: handleAddNode,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this) // Display spinner while loading\n          : \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"node-container\",\n          children: localNodes.filter(node => node.day === day - 1).map((node, index, array) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"node\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"node-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"node-name\",\n                children: node.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this), index < array.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 48\n            }, this)]\n          }, node.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(DayCard, \"ykABwHCppkAspXIAYhf5yjT/Ecc=\");\n_c = DayCard;\nexport default DayCard;\nvar _c;\n$RefreshReg$(_c, \"DayCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DayCard","day","nodes","onAddPlaceNode","_s","localNodes","setLocalNodes","isLoading","setIsLoading","handleAddNode","e","setTimeout","newNode","id","Date","now","name","length","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","filter","node","map","index","array","Fragment","_c","$RefreshReg$"],"sources":["D:/BongoJourney.AI/Frontend/src/components/DayCard.js"],"sourcesContent":["// DayCard.js\r\nimport React, { useState } from \"react\";\r\nimport \"./DayCard.css\";\r\n\r\nconst DayCard = ({ day, nodes, onAddPlaceNode }) => {\r\n  const [localNodes, setLocalNodes] = useState(nodes);\r\n  const [isLoading, setIsLoading] = useState(false); // Loading state\r\n\r\n  const handleAddNode = async (e) => {\r\n    setIsLoading(true); // Start loading animation\r\n\r\n    // Simulate an API call or any asynchronous operation\r\n    setTimeout(async () => {\r\n      // Create a new node with a unique identifier\r\n      const newNode = {\r\n        id: Date.now(),\r\n        name: `Node ${localNodes.length + 1}`,\r\n        day: day - 1,\r\n      };\r\n\r\n      // Update the localNodes state with the new node\r\n      setLocalNodes([...localNodes, newNode]);\r\n\r\n      // Call the parent component's onAddPlaceNode function if provided\r\n      if (onAddPlaceNode) {\r\n        await onAddPlaceNode(newNode);\r\n      }\r\n\r\n      setIsLoading(false); // Stop loading animation\r\n    }, 1000); // Simulated delay for demonstration (replace with actual API call)\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onAddPlaceNode} className=\"day-card\">\r\n      <div className=\"full\">\r\n        <div className=\"left\">\r\n          <div className=\"\">Day {day}</div>\r\n          <div className=\"plus-button\" onClick={handleAddNode}>\r\n            {isLoading ? (\r\n              <div className=\"spinner\"></div> // Display spinner while loading\r\n            ) : (\r\n              \"+\"\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"right\">\r\n          <div className=\"node-container\">\r\n            {localNodes\r\n              .filter((node) => node.day === day - 1)\r\n              .map((node, index, array) => (\r\n                <React.Fragment key={node.id}>\r\n                  <div className=\"node\">\r\n                    <div className=\"node-circle\"></div>\r\n                    <div className=\"node-name\">{node.name}</div>\r\n                  </div>\r\n                  {index < array.length - 1 && <div className=\"line\"></div>}\r\n                </React.Fragment>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default DayCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}