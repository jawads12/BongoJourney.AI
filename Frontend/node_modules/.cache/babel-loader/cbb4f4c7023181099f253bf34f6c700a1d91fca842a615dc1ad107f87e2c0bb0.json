{"ast":null,"code":"var _jsxFileName = \"D:\\\\BongoJourney.AI\\\\Frontend\\\\src\\\\components\\\\Pop1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pop1 = ({\n  closePop1\n}) => {\n  _s();\n  const [selectedOption, setSelectedOption] = useState('Option 1');\n  const [phone, setPhone] = useState('');\n  useEffect(() => {\n    // Retrieve the phone number from local storage when the component mounts\n    const storedPhone = localStorage.getItem('phone');\n    if (storedPhone) {\n      setPhone(storedPhone);\n    }\n  }, []);\n  const handleSelectChange = e => {\n    setSelectedOption(e.target.value);\n  };\n  const handleSubmit = async () => {\n    if (!phone) {\n      alert('Phone number not found in local storage');\n      return;\n    }\n\n    // Prepare the plan data to be sent to the server\n    const planData = {\n      phone,\n      PlanSrc: selectedOption,\n      numberO\n      // Fill in the other fields (upcoming, past, numberOfDays, withFriends, withFamily) as needed\n    };\n\n    try {\n      // Send the plan data to the server to create a new plan in the database\n      const response = await axios.post('http://localhost:3001/create-plan', planData);\n      if (response.status === 200) {\n        // Plan created successfully, you can add more logic if needed\n        console.log('Plan created successfully');\n      } else {\n        console.error('Failed to create a plan');\n      }\n    } catch (error) {\n      console.error('Error creating a plan:', error);\n    }\n    closePop1();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"I want to start with...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedOption,\n        onChange: handleSelectChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Option 1\",\n          children: \"AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Option 2\",\n          children: \"Myself\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Phone: \", phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Pop1, \"WbMYa+TjbERPofVheIxNREeYFac=\");\n_c = Pop1;\nexport default Pop1;\nvar _c;\n$RefreshReg$(_c, \"Pop1\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Pop1","closePop1","_s","selectedOption","setSelectedOption","phone","setPhone","storedPhone","localStorage","getItem","handleSelectChange","e","target","value","handleSubmit","alert","planData","PlanSrc","numberO","response","post","status","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/BongoJourney.AI/Frontend/src/components/Pop1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Pop1 = ({ closePop1 }) => {\r\n  const [selectedOption, setSelectedOption] = useState('Option 1');\r\n  const [phone, setPhone] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Retrieve the phone number from local storage when the component mounts\r\n    const storedPhone = localStorage.getItem('phone');\r\n    if (storedPhone) {\r\n      setPhone(storedPhone);\r\n    }\r\n  }, []);\r\n\r\n  const handleSelectChange = (e) => {\r\n    setSelectedOption(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!phone) {\r\n      alert('Phone number not found in local storage');\r\n      return;\r\n    }\r\n\r\n    // Prepare the plan data to be sent to the server\r\n    const planData = {\r\n      phone,\r\n      PlanSrc: selectedOption,\r\n      numberO\r\n      // Fill in the other fields (upcoming, past, numberOfDays, withFriends, withFamily) as needed\r\n    };\r\n\r\n    try {\r\n      // Send the plan data to the server to create a new plan in the database\r\n      const response = await axios.post('http://localhost:3001/create-plan', planData);\r\n\r\n      if (response.status === 200) {\r\n        // Plan created successfully, you can add more logic if needed\r\n        console.log('Plan created successfully');\r\n      } else {\r\n        console.error('Failed to create a plan');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating a plan:', error);\r\n    }\r\n\r\n    closePop1();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>I want to start with...</div>\r\n      <div>\r\n        <select value={selectedOption} onChange={handleSelectChange}>\r\n          <option value=\"Option 1\">AI</option>\r\n          <option value=\"Option 2\">Myself</option>\r\n        </select>\r\n        <div>Phone: {phone}</div>\r\n        <button onClick={handleSubmit}>Submit</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pop1;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}